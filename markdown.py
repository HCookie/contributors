# pylint: disable=too-many-locals
"""This module contains the functions needed to write the output to markdown files."""


def write_to_markdown(
    collaborators, filename, start_date, end_date, organization, repository
):
    """
    This function writes a list of collaborators to a markdown file in table format.
    Each collaborator is represented as a dictionary with keys 'username', 'contribution_count', 'new_contributor', and 'commits'.

    Args:
        collaborators (list): A list of dictionaries, where each dictionary represents a collaborator.
                              Each dictionary should have the keys 'username', 'contribution_count', and 'commits'.
        filename (str): The path of the markdown file to which the table will be written.
        start_date (str): The start date of the date range for the contributor list.
        end_date (str): The end date of the date range for the contributor list.
        organization (str): The organization for which the contributors are being listed.
        repository (str): The repository for which the contributors are being listed.

    Returns:
        None

    """
    # Put together the contributor table
    if start_date and end_date:
        headers = "| Username | Contribution Count | New Contributor | Commits |\n| --- | --- | --- | --- |\n"
    else:
        headers = "| Username | Contribution Count | Commits |\n| --- | --- | --- |\n"

    table = headers
    total_contributions = 0

    for collaborator in collaborators:
        total_contributions += collaborator.contribution_count
        username = collaborator.username
        contribution_count = collaborator.contribution_count
        commit_url = collaborator.commit_url
        new_contributor = collaborator.new_contributor

        if start_date and end_date:
            row = f"| {username} | {contribution_count} | {new_contributor} | {commit_url} |\n"
        else:
            row = f"| {username} | {contribution_count} | {commit_url} |\n"

        table += row

    # Put together the summary table including # of new contributions, # of new contributors, % new contributors, % returning contributors
    if start_date and end_date:
        summary_table = "| Total Contributors | Total Contributions | % new contributors |\n| --- | --- | --- |\n"
        summary_table += (
            "| "
            + str(len(collaborators))
            + " | "
            + str(total_contributions)
            + " | "
            + str(
                round(
                    (len([x for x in collaborators if x.new_contributor is True]))
                    / len(collaborators)
                    * 100,
                    2,
                )
            )
            + "% | \n\n"
        )
    else:
        summary_table = "| Total Contributors | Total Contributions |\n| --- | --- |\n"
        summary_table += (
            "| " + str(len(collaborators)) + " | " + str(total_contributions) + " |\n\n"
        )

    # Write the markdown file
    with open(filename, "w", encoding="utf-8") as markdown_file:
        markdown_file.write("# Contributors\n\n")
        if start_date and end_date:
            markdown_file.write(
                f"Date range for contributor list:  {start_date} to {end_date}\n"
            )
        if organization:
            markdown_file.write(f"Organization: {organization}\n")
        if repository:
            markdown_file.write(f"Repository: {repository}\n")
        markdown_file.write("\n")
        markdown_file.write(summary_table)
        markdown_file.write(table)
        markdown_file.write(
            "\n _this file was generated by the [Contributors GitHub Action](https://github.com/github/contributors)_\n"
        )
